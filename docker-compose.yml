version: '3.8'

networks:
  backend:
    driver: bridge

volumes:
  geoserver_data:
    driver: local
  postgis_data:
    driver: local

services:
  react-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: react-app
    ports:
      - "3000:3000"
    depends_on:
      - geoserver
    restart: always
    networks:
      - backend
    environment:
      - REACT_APP_HOST_API=${REACT_APP_HOST_API}

  geoserver:
    image: kartoza/geoserver:latest
    container_name: geoserver
    ports:
      - "8085:8080"
    volumes:
      - ./respaldo_de_geovisor/data_dir:/tmp/data_dir:ro
      - geoserver_data:/opt/geoserver/data_dir
    environment:
      - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
      - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
    command: >
      sh -c "
      if [ ! -f /opt/geoserver/data_dir/.initialized ]; then
        echo 'Copiando respaldo inicial...';
        cp -r /tmp/data_dir/* /opt/geoserver/data_dir;
        touch /opt/geoserver/data_dir/.initialized;
      else
        echo 'El respaldo ya fue copiado previamente.';
      fi;
      exec /start-geoserver.sh
      "
    depends_on:
      - postgis
    restart: always
    networks:
      - backend

  postgis:
    image: postgis/postgis:15-3.4
    container_name: postgis
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - postgis_data:/var/lib/postgresql/data
    restart: always
    networks:
      - backend
